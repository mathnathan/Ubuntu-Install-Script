#! /bin/bash

# --------- Ubuntu 12.04 Install Script -----------
#
# Intended for use in the Vizualization Lab at 
# Florida State University's Department of
# Scientific Computing
#
# Authors: Nathan Crock, Evan Bollig, Andrew Young
#
# -------------------------------------------------

function print_update {
	echo -e "\e[00;32m$1\e[00m"
}

function print_error {
	echo -e "\e[00;31m$1\e[00m"
}


# ---- Default Ubuntu Repository Packages ----

print_update "\nInstalling Python 2.7 libraries and tools\n"

apt-get -f --assume-yes install python-all
apt-get -f --assume-yes install python-all-dev
apt-get -f --assume-yes install python-setuptools
apt-get -f --assume-yes install python-numpy
apt-get -f --assume-yes install python-scientific
apt-get -f --assume-yes install python-scipy
apt-get -f --assume-yes install python-matplotlib
apt-get -f --assume-yes install python-netcdf
apt-get -f --assume-yes install python-pygame
apt-get -f --assume-yes install ipython
apt-get -f --assume-yes install python-yaml


print_update "\nInstalling Python 3 libraries and tools\n"

apt-get -f --assume-yes install python3-all
apt-get -f --assume-yes install python3-all-dev
apt-get -f --assume-yes install python3-setuptools
apt-get -f --assume-yes install python3-numpy
apt-get -f --assume-yes install ipython3

print_update "\nInstalling Programming/Build Libraries and Tools\n"

# Compilers/Interpreters
apt-get -f --assume-yes install gfortran
apt-get -f --assume-yes install openjdk-7-jdk
apt-get -f --assume-yes install clang
apt-get -f --assume-yes install build-essential
apt-get -f --assume-yes install mono-complete

# Libraries
apt-get -f --assume-yes install libboost1.48-all-dev
apt-get -f --assume-yes install libvtk5-dev
apt-get -f --assume-yes install openmpi-bin
apt-get -f --assume-yes install libarmadillo-dev
apt-get -f --assume-yes install libfftw3-dev
apt-get -f --assume-yes install libassimp-dev
apt-get -f --assume-yes install libglew1.6-dev
apt-get -f --assume-yes install freeglut3-dev
apt-get -f --assume-yes install libusb-1.0-0-dev
apt-get -f --assume-yes install libxi-dev 
apt-get -f --assume-yes install libxmu-dev
	# Computer Vision Tools
	apt-get -f --assume-yes install libopencv-dev
	apt-get -f --assume-yes install python-opencv

# Build Tools
apt-get -f --assume-yes install cmake
apt-get -f --assume-yes install valgrind
apt-get -f --assume-yes install doxygen

print_update "\nInstalling Applications and User Tools\n"

apt-get -f --assume-yes install mercurial
apt-get -f --assume-yes install subversion
apt-get -f --assume-yes install xclip
apt-get -f --assume-yes install graphviz
apt-get -f --assume-yes install git
apt-get -f --assume-yes install screen
apt-get -f --assume-yes install byobu
apt-get -f --assume-yes install vim
apt-get -f --assume-yes install chromium-browser
apt-get -f --assume-yes install wine1.4-dev
apt-get -f --assume-yes install winetricks
apt-get -f --assume-yes install wget
apt-get -f --assume-yes install acroread
apt-get -f --assume-yes install texlive-full

print_update "\nInstalling Drivers\n"

apt-get -f --assume-yes install nvidia-current

print_update "\nInstalling Networking Tools\n"

apt-get -f --assume-yes install sshfs
apt-get -f --assume-yes install samba
apt-get -f --assume-yes install smbfs


# ---- Packages not in Ubuntu's Repositories ----

print_update "\nDownloading and Installing Packges not in Ubuntu's Repository\n"

mkdir /var/log/ubuntu_install

# ---------------------------------------------------

print_update "\n... Visit2.4.2\n"

VISIT="http://portal.nersc.gov/svn/visit/trunk/releases/2.5.2/visit2_5_2.linux-x86_64-ubuntu11.tar.gz"
wget -c -U mozilla -o /var/log/ubuntu_install/visit_wget_log.txt -O /tmp/visit2_5_2.linux-x86_64.tar.gz $VISIT
tar xvzf /tmp/visit2_5_2.linux-x86_64.tar.gz -C /usr/share
echo "PATH=$PATH:/usr/share/visit2_5_2.linux-x86_64/bin" >> /etc/environment

# ---------------------------------------------------

print_update "\n... SimpleCV1.2\n"

SIMPLECV="http://downloads.sourceforge.net/project/simplecv/1.2/SimpleCV-1.2.deb?r=http%3A%2F%2Fsimplecv.org%2F&ts=1332342142&use_mirror=superb-dca2"
mkdir /tmp/simplecv
wget -c -U mozilla -o /var/log/ubuntu_install/simplecv_wget_log.txt -O /tmp/simplecv/SimpleCV.deb $SIMPLECV
dpkg -i /tmp/simplecv/SimpleCV.deb

# ---------------------------------------------------

print_update "\n... Eigen3.0.5\n"

EIGEN="http://bitbucket.org/eigen/eigen/get/3.0.5.tar.bz2"
mkdir /tmp/eigen
wget -c -U mozilla -o /var/log/ubuntu_install/eigen_wget_log.txt -O /tmp/eigen/eigen3.0.5.tar.bz2 $EIGEN

(cd /tmp/eigen; tar xvjf eigen3.0.5.tar.bz2; cd eigen-eigen-6e7488e20373; mkdir build; cd build; cmake ..; make -j4 install)

# ---------------------------------------------------

print_update "\n... Flann1.7\n"

mkdir /tmp/flann
FLANN="http://people.cs.ubc.ca/~mariusm/uploads/FLANN/flann-1.7.1-src.zip"
wget -c -U mozilla -o /var/log/ubuntu_install/flann_wget_log.txt -O /tmp/flann/flann-1.7.1.zip $FLANN

(cd /tmp/flann; unzip flann-1.7.1.zip; cd flann-1.7.1-src; mkdir build; cd build; cmake ..; make -j4 install; mv /usr/local/lib64/* /lib; rmdir /usr/local/lib64)

# ---------------------------------------------------

print_update "\n... Qhull2012.1\n"

mkdir /tmp/qhull
QHULL="http://www.qhull.org/download/qhull-2012.1-src.tgz"
wget -c -U mozilla -o /var/log/ubuntu_install/qhull_wget_log.txt -O /tmp/qhull/qhull2012.1.tgz $QHULL

(cd /tmp/qhull; tar xvzf qhull2012.1.tgz; cd qhull-2012.1; cd build; cmake ..; make -j4 install)

# ---------------------------------------------------

print_update "\n... OpenNI\n"

(cd /usr/local/share; git clone https://github.com/OpenNI/OpenNI.git; cd OpenNI/Platform/Linux/CreateRedist; chmod +x RedistMaker; ./RedistMaker; cd ../Redist/OpenNI-Bin-Dev-Linux-x64-v1.5.2.23; chmod +x install.sh; ./install.sh)

# ---------------------------------------------------

print_update "\n... KinectSensor\n"

(cd /usr/local/share; git clone https://github.com/avin2/SensorKinect; cd SensorKinect/Platform/Linux-x86/CreateRedist; chmod +x RedistMaker; ./RedistMaker; cd ../Redist/Sensor-Bin-Dev-Linux-x64-v5.1.0.25; chmod +x install.sh; ./install.sh)

# ---------------------------------------------------

print_update "\n... Point Cloud Library\n"

mkdir /tmp/pcl
PCL="http://www.pointclouds.org/assets/files/1.4.0/PCL-1.4.0-Source.tar.bz2"
wget -c -U mozilla -o /var/log/ubuntu_install/pcl_wget_log.txt -O /tmp/pcl/pcl.1.4.tar.bz2 $PCL

(cd /tmp/pcl; tar xvjf pcl.1.4.tar.bz2; cd PCL-1.4.0-Source; mkdir build; cd build; cmake ..; make -j4 install)



